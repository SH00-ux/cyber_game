import streamlit as st
import random

# ุฅุนุฏุงุฏ ุงูุตูุญุฉ ูุงุชุฌุงู ุงููุชุงุจุฉ
st.set_page_config(page_title="Cyber Security Challenge", layout="wide")

# ููุฏ CSS ูุชุญุณูู ุงูุงุณุชุฌุงุจุฉ ุนูู ุงูููุงุชู ูุน ุชุญุณูู ุงููุตูุต
matrix_bg = """
<style>
    body {
        background-color: black;
        color: white;
        text-align: right;
        direction: rtl;
        font-family: "Courier New", Courier, monospace;
        text-shadow: 0 0 10px green, 0 0 20px green, 0 0 30px green; /* ุงูุธู ุชุญุช ุงููุตูุต */
    }
    [data-testid="stAppViewContainer"] {
        background-color: black;
        background-image: url('https://www.hackingloops.com/wp-content/uploads/2020/09/hacker-background-1024x536.jpg');
        background-size: cover;
        background-position: center;
        background-attachment: fixed;
    }
    .css-1d391kg {
        color: white !important;
        background-color: rgba(0, 0, 0, 0.6) !important; /* ุฎูููุฉ ูุธููุฉ ูููุต */
        padding: 10px;
    }
    .stButton > button {
        background-color: green;
        color: white;
        width: 100%;  /* ุงูุชุฃูุฏ ูู ุฃู ุงูุฃุฒุฑุงุฑ ุชุบุทู ูุงูู ุงูุนุฑุถ ุนูู ุงูุดุงุดุงุช ุงูุตุบูุฑุฉ */
        font-size: 20px;
    }
    .stRadio label {
        color: white !important;
        font-size: 18px;
    }
    .stTextInput input {
        background-color: rgba(0, 0, 0, 0.5);
        color: white !important;
    }
    .stSlider > div {
        color: white !important;
    }

    /* ุชุญุณูู ุงุณุชุฌุงุจุฉ ุงูุชุตููู ููุดุงุดุงุช ุงูุตุบูุฑุฉ */
    @media only screen and (max-width: 768px) {
        .css-1d391kg {
            font-size: 18px;
        }
        .stButton > button {
            font-size: 18px;
        }
        .stRadio label {
            font-size: 16px;
        }
    }
</style>
"""

st.markdown(matrix_bg, unsafe_allow_html=True)

st.title("๐ก๏ธ ุชุญุฏู ุงูุงุฎุชุฑุงู ุงูุณูุจุฑุงูู")
st.write("๐ ุงุฎุชุจุฑ ููุงุฑุงุชู ูู ุงูุฃูู ุงูุณูุจุฑุงูู!")

# ุชููุฆุฉ session_state
if "player_name" not in st.session_state:
    st.session_state.player_name = None
if "score" not in st.session_state:
    st.session_state.score = 0
if "leaderboard" not in st.session_state:
    st.session_state.leaderboard = {}

# ุชุณุฌูู ุงุณู ุงููุงุนุจ
if st.session_state.player_name is None:
    player_name = st.text_input("๐น ุฃุฏุฎู ุงุณูู ููุจุฏุก:")
    if st.button("โ ุงุจุฏุฃ ุงููุนุจุฉ") and player_name:
        st.session_state.player_name = player_name
        if player_name not in st.session_state.leaderboard:
            st.session_state.leaderboard[player_name] = 0  
        st.rerun()
    st.stop()

st.subheader(f"๐ค ุงููุงุนุจ: {st.session_state.player_name}")

# ูุงุฆูุฉ ุงูุฃุณุฆูุฉ ุงูุตุนุจุฉ
questions = [
    {
        "question": "๐ ูุฏูู ูุตูู ุฅูู ุดุจูุฉ ุฏุงุฎููุฉ ูุดุฑูุฉ ุนุจุฑ ููุทุฉ Wi-Fi ุถุนููุฉ ุงูุชุดููุฑ. ูุง ูู ุฃูู ุดูุก ูุฌุจ ุฃู ุชูุนูู ููุฎุชุจุฑ ุงุฎุชุฑุงู ุฃุฎูุงููุ",
        "options": [
            "ุงูุชูุงุท ูุชุญููู ุญุฑูุฉ ุงููุฑูุฑ ุจุงุณุชุฎุฏุงู Wireshark",
            "ูุญุงููุฉ ุชุณุฌูู ุงูุฏุฎูู ุฅูู ุฎูุงุฏู ุงูุดุฑูุฉ ูุจุงุดุฑุฉ",
            "ุฅุจูุงุบ ุงูุดุฑูุฉ ุฏูู ุฌูุน ุฃู ุจูุงูุงุช"
        ],
        "answer": "ุงูุชูุงุท ูุชุญููู ุญุฑูุฉ ุงููุฑูุฑ ุจุงุณุชุฎุฏุงู Wireshark",
    },
    {
        "question": "๐ก๏ธ ุฃุซูุงุก ุงุฎุชุจุงุฑ ุงุฎุชุฑุงู ููููุน ููุจุ ูุฌุฏุช ุฃู ุฅุฏุฎุงู ` OR 1=1 --` ูุณูุญ ูู ุจุชุฌุงูุฒ ุงููุตุงุฏูุฉ. ูุงุฐุง ูุนูู ูุฐุงุ",
        "options": [
            "ุงููููุน ูุณุชุฎุฏู ูููุงุช ูุฑูุฑ ุถุนููุฉ",
            "ุงููููุน ูุนุงูู ูู ุซุบุฑุฉ SQL Injection",
            "ุงููููุน ูุณูุญ ุจุชุฌุงูุฒ ุงูุญูุงูุฉ ุจุณุจุจ ุถุนู ุงูุชุดููุฑ"
        ],
        "answer": "ุงููููุน ูุนุงูู ูู ุซุบุฑุฉ SQL Injection",
    },
    {
        "question": "๐ฅ ูุงุฐุง ูุนูู ูุตุทูุญ 'Zero-Day Attack' ูู ูุฌุงู ุงูุฃูู ุงูุณูุจุฑุงููุ",
        "options": [
            "ูุฌูู ูุณุชุบู ุซุบุฑุฉ ูู ุชููุชุดู ุจุนุฏ ูู ูุจู ุดุฑูุฉ ุงูุจุฑูุฌูุงุช",
            "ูุฌูู ุนูู ุดุจูุฉ Wi-Fi ููุชูุญุฉ",
            "ูุฌูู ูุณุชูุฏู ุชุทุจููุงุช ุงูููุงุชู ุงููุญูููุฉ"
        ],
        "answer": "ูุฌูู ูุณุชุบู ุซุบุฑุฉ ูู ุชููุชุดู ุจุนุฏ ูู ูุจู ุดุฑูุฉ ุงูุจุฑูุฌูุงุช",
    },
    {
        "question": "๐ ููู ูุชู ุงูุชุตุฏู ููุฌูุงุช 'Man-in-the-Middle'ุ",
        "options": [
            "ุงุณุชุฎุฏุงู ุจุฑูุชููููุงุช HTTPS",
            "ุชุนุทูู ุฌุฏุฑุงู ุงูุญูุงูุฉ",
            "ุฅููุงู ุชุดููุฑ ุงูุจูุงูุงุช"
        ],
        "answer": "ุงุณุชุฎุฏุงู ุจุฑูุชููููุงุช HTTPS",
    },
    {
        "question": "๐จ ุฅุฐุง ุชู ุงูุชุดุงู ุจุฑูุฌูุฉ ุฎุจูุซุฉ ูู ุดุจูุฉ ุฏุงุฎููุฉุ ูุง ูู ุงูุฎุทูุฉ ุงูุฃููู ุงูุชู ูุฌุจ ุงุชุฎุงุฐูุงุ",
        "options": [
            "ุฅููุงู ูุงูุฉ ุงูุฃูุธูุฉ ุงููุชุฃุซุฑุฉ ุนูู ุงูููุฑ",
            "ูุฑุงูุจุฉ ุงูุฃูุธูุฉ ุงููุชุฃุซุฑุฉ ููุท ุฏูู ุงุชุฎุงุฐ ุฅุฌุฑุงุกุงุช",
            "ุฅุจูุงุบ ุงูุฌูุงุช ุงููุนููุฉ ูุน ุงุณุชูุฑุงุฑ ุงูุฃูุธูุฉ ูู ุงูุนูู"
        ],
        "answer": "ุฅููุงู ูุงูุฉ ุงูุฃูุธูุฉ ุงููุชุฃุซุฑุฉ ุนูู ุงูููุฑ",
    },
    {
        "question": "๐ ูุง ูู ุงููุฏู ูู ุงุฎุชุจุงุฑ ุงูุงุฎุชุฑุงู ูู ุงููุคุณุณุงุชุ",
        "options": [
            "ุฅูุฌุงุฏ ููุงุท ุถุนู ูู ุงูุฃูุธูุฉ ูุชูุฏูู ุงูุญููู ูุชุฃููููุง",
            "ุฅุฒุงูุฉ ุฌุฏุฑุงู ุงูุญูุงูุฉ ุจุงููุงูู",
            "ุงุฎุชุฑุงู ุงูุฃูุธูุฉ ููุญุตูู ุนูู ููุงูุขุช ูุงููุฉ"
        ],
        "answer": "ุฅูุฌุงุฏ ููุงุท ุถุนู ูู ุงูุฃูุธูุฉ ูุชูุฏูู ุงูุญููู ูุชุฃููููุง",
    }
]

if "current_question" not in st.session_state or not st.session_state.remaining_questions:
    st.session_state.remaining_questions = questions.copy()
    st.session_state.current_question = random.choice(st.session_state.remaining_questions)

question = st.session_state.current_question
st.subheader(f"๐ค {question['question']}")
selected_option = st.radio("ุงุฎุชุฑ ุงูุฅุฌุงุจุฉ ุงูุตุญูุญุฉ:", question["options"])

# ุฒุฑ ุงูุฅุฌุงุจุฉ
if st.button("๐ ุชุญูู ูู ุงูุฅุฌุงุจุฉ"):
    if selected_option == question["answer"]:
        st.session_state.score += 10
        st.success("โ ุฅุฌุงุจุฉ ุตุญูุญุฉ! +10 ููุงุท")
    else:
        st.error("โ ุฅุฌุงุจุฉ ุฎุงุทุฆุฉ!")

    # ุฅุฒุงูุฉ ุงูุณุคุงู ุงููุฌุงุจ ุนููู
    st.session_state.remaining_questions.remove(question)

    # ุฅููุงุก ุงููุนุจุฉ ุฅุฐุง ุงูุชูุช ุงูุฃุณุฆูุฉ
    if not st.session_state.remaining_questions:
        st.session_state.leaderboard[st.session_state.player_name] = max(st.session_state.score, st.session_state.leaderboard[st.session_state.player_name])
        st.success("๐ ุชูุงูููุง! ููุฏ ุฃูููุช ุงูุชุญุฏู.")
        if st.button("๐ ุฅุนุงุฏุฉ ุงููุนุจ"):
            st.session_state.score = 0
            st.session_state.remaining_questions = {}
            st.rerun()
        st.stop()

    # ุงุฎุชูุงุฑ ุณุคุงู ุฌุฏูุฏ
    st.session_state.current_question = random.choice(st.session_state.remaining_questions)
    st.rerun()

# ุนุฑุถ ุงูููุงุท
st.subheader(f"๐ฏ ุงูููุงุท: {st.session_state.score}")

# ููุญุฉ ุงููุชุตุฏุฑูู
st.subheader("๐ ููุญุฉ ุงููุชุตุฏุฑูู")
sorted_leaderboard = sorted(st.session_state.leaderboard.items(), key=lambda x: x[1], reverse=True)[:5]
for i, (name, score) in enumerate(sorted_leaderboard, start=1):
    st.write(f"{i}. {name} - {score} ููุทุฉ")

# ุฅุนุงุฏุฉ ุชุดุบูู ุงููุนุจุฉ
if st.button("๐ ุฅุนุงุฏุฉ ุงููุนุจุฉ"):
    st.session_state.score = 0
    st.session_state.remaining_questions = {}
    st.session_state.player_name = None
    st.rerun()
